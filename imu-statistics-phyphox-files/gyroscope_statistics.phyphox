<phyphox version="1.6" locale="en">
    <title>Gyroscope Statistics</title>
    <category>Phyphox Arduino Experiments</category>
    <description>
        Check the statistical distribution of the Arduino's gyroscope sensor data.

        This experiment simply displays raw data from the sensor in a histogram, which should form into a Gaussian distribution when the device is resting. Depending on the noise of the sensor you may want to change the binning size. 
    </description>

    <icon format="base64">
        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
    </icon>


    <data-containers>
        <!-- buffers for the raw gyroscope data -->
        <container size="0">angvel</container>
        <container size="0">angvelX</container>
        <container size="0">angvelY</container>
        <container size="0">angvelZ</container>
        <container size="0">t</container>

        <!-- buffers for the histogram bars -->
        <container size="0">binStartAngVel</container>
        <container size="0">binStartX</container>
        <container size="0">binStartY</container>
        <container size="0">binStartZ</container>
        <container size="0">binCountAngVel</container>
        <container size="0">binCountX</container>
        <container size="0">binCountY</container>
        <container size="0">binCountZ</container>
        <container size="1">binSize</container>

        <!-- buffers for the averages -->
        <container size="1">averageAngVel</container>
        <container size="1">averageX</container>
        <container size="1">averageY</container>
        <container size="1">averageZ</container>

        <!-- buffers for the standard deviations -->
        <container size="1">deviationAngVel</container>
        <container size="1">deviationX</container>
        <container size="1">deviationY</container>
        <container size="1">deviationZ</container>

        <!-- buffers for the counts -->
        <container size="1">countAngVel</container>
        <container size="1">countX</container>
        <container size="1">countY</container>
        <container size="1">countZ</container>

        <!-- temporary buffers used for calculations -->
        <container size="0">temp1AngVel</container>
        <container size="0">temp1X</container>
        <container size="0">temp1Y</container>
        <container size="0">temp1Z</container>
        <container size="0">temp2AngVel</container>
        <container size="0">temp2X</container>
        <container size="0">temp2Y</container>
        <container size="0">temp2Z</container>

        <!-- buffers for min and max X values (used for Gaussian calculation) -->
        <container size="1">minXAngVel</container>
        <container size="1">minXX</container>
        <container size="1">minXY</container>
        <container size="1">minXZ</container>
        <container size="1">maxXAngVel</container>
        <container size="1">maxXX</container>
        <container size="1">maxXY</container>
        <container size="1">maxXZ</container>

        <!-- buffers for the histogram curve -->
        <container size="500">gaussianXAngVel</container>
        <container size="500">gaussianXX</container>
        <container size="500">gaussianXY</container>
        <container size="500">gaussianXZ</container>
        <container size="500">gaussianAngVel</container>
        <container size="500">gaussianX</container>
        <container size="500">gaussianY</container>
        <container size="500">gaussianZ</container>
    </data-containers>


    <!-- connecting the arduino's gyroscope to the Phyphox app -->
    <input>
        <bluetooth mode="notification" rate="1" subscribeOnStart="false" id="nano_ble">
            <output char="cddf1002-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="0">t</output>
            <output char="cddf1002-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="4">angvelX</output>
            <output char="cddf1002-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="8">angvelY</output>
            <output char="cddf1002-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="12">angvelZ</output>
            <output char="cddf1002-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian" offset="16">angvel</output>
        </bluetooth>
    </input>

    <output>
        <bluetooth id="nano_ble">
            <config char="cddf1003-30f7-4671-8b43-5e40ba53514a" conversion="float32LittleEndian">2.0</config>
        </bluetooth>
    </output>


    <views>
        <view label="Abs Ang Vel">
            <graph label="Angular Velocity" labelX="Time (s)" labelY="Angular Velocity (deg/s)" partialUpdate="true" style="lines">
                <input axis="x">t</input>
                <input axis="y">angvel</input>
            </graph>
            <graph label="Angular Velocity Histogram" labelX="Angular Velocity (deg/s)" labelY="Count" partialUpdate="false">
                <input axis="x">gaussianXAngVel</input>
                <input axis="y" style="lines" lineWidth="2">gaussianAngVel</input>
                <input axis="x">binStartAngVel</input>
                <input axis="y" style="vbars" color="E0E040" lineWidth="0.9">binCountAngVel</input>
            </graph>
            <edit label="Bin size" unit="deg/s" default="0.005" signed="false">
                <output>binSize</output>
            </edit>
            <value label="Average angular velocity" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>averageAngVel</input>
            </value>
            <value label="Standard deviation" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>deviationAngVel</input>
            </value>
            <value label="Count" precision="0" scientific="false" unit="" factor="1">
                <input>countAngVel</input>
            </value>
        </view>   
        
        <view label="X Ang Vel">
            <graph label="Angular Velocity in X-component" labelX="Time (s)" labelY="x-Angular Velocity (deg/s)" partialUpdate="true" style="lines">
                <input axis="x">t</input>
                <input axis="y">angvelX</input>
            </graph>
            <graph label="x-Angular Velocity Histogram" labelX="x-Angular Velocity (deg/s)" labelY="Count" partialUpdate="false">
                <input axis="x">gaussianXX</input>
                <input axis="y" style="lines" lineWidth="2">gaussianX</input>
                <input axis="x">binStartX</input>
                <input axis="y" style="vbars" color="E0E040" lineWidth="0.9">binCountX</input>
            </graph>
            <edit label="Bin size" unit="deg/s" default="0.005" signed="false">
                <output>binSize</output>
            </edit>
            <value label="Average x-angular velocity" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>averageX</input>
            </value>
            <value label="Standard deviation" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>deviationX</input>
            </value>
            <value label="Count" precision="0" scientific="false" unit="" factor="1">
                <input>countX</input>
            </value>
        </view>

        <view label="Y Ang Vel">
            <graph label="Angular Velocity in Y-component" labelX="Time (s)" labelY="y-Angular Velocity (deg/s)" partialUpdate="true" style="lines">
                <input axis="x">t</input>
                <input axis="y">angvelY</input>
            </graph>
            <graph label="y-Angular Velocity Histogram" labelX="y-aAngular Velocity (deg/s)" labelY="Count" partialUpdate="false">
                <input axis="x">gaussianXY</input>
                <input axis="y" style="lines" lineWidth="2">gaussianY</input>
                <input axis="x">binStartY</input>
                <input axis="y" style="vbars" color="E0E040" lineWidth="0.9">binCountY</input>
            </graph>
            <edit label="Bin size" unit="deg/s" default="0.005" signed="false">
                <output>binSize</output>
            </edit>
            <value label="Average y-angular velocity" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>averageY</input>
            </value>
            <value label="Standard deviation" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>deviationY</input>
            </value>
            <value label="Count" precision="0" scientific="false" unit="" factor="1">
                <input>countY</input>
            </value>
        </view>

        <view label="Z Ang Vel">
            <graph label="Angular Velocity in Z-component" labelX="Time (s)" labelY="z-Angular Velocity (deg/s)" partialUpdate="true" style="lines">
                <input axis="x">t</input>
                <input axis="y">angvelZ</input>
            </graph>
            <graph label="z-Angular Velocity Histogram" labelX="z-Angular Velocity (deg/s)" labelY="Count" partialUpdate="false">
                <input axis="x">gaussianXZ</input>
                <input axis="y" style="lines" lineWidth="2">gaussianZ</input>
                <input axis="x">binStartZ</input>
                <input axis="y" style="vbars" color="E0E040" lineWidth="0.9">binCountZ</input>
            </graph>
            <edit label="Bin size" unit="deg/s" default="0.005" signed="false">
                <output>binSize</output>
            </edit>
            <value label="Average z-angular velocity" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>averageZ</input>
            </value>
            <value label="Standard deviation" precision="4" scientific="false" unit="deg/s" factor="1">
                <input>deviationZ</input>
            </value>
            <value label="Count" precision="0" scientific="false" unit="" factor="1">
                <input>countZ</input>
            </value>
        </view>
    </views>


    <analysis>
        <!-- for the calculations of the histogram bars -->
        <binning>
            <input clear="false">angvel</input>
            <input clear="false" as="dx">binSize</input>
            <output clear="true">binStartAngVel</output>
            <output clear="true">binCountAngVel</output>
        </binning>  

 		<binning>
            <input clear="false">angvelX</input>
            <input clear="false" as="dx">binSize</input>
            <output clear="true">binStartX</output>
            <output clear="true">binCountX</output>
        </binning>

	<binning>
            <input clear="false">angvelY</input>
            <input clear="false" as="dx">binSize</input>
            <output clear="true">binStartY</output>
            <output clear="true">binCountY</output>
        </binning>

        <binning>
            <input clear="false">angvelZ</input>
            <input clear="false" as="dx">binSize</input>
            <output clear="true">binStartZ</output>
            <output clear="true">binCountZ</output>
        </binning> 

		
        <!-- calculates the averages and standard deviations -->
        <average>
            <input clear="false">angvel</input>
            <output as="average">averageAngVel</output>
            <output as="stddev">deviationAngVel</output>
        </average>

        <average>
            <input clear="false">angvelX</input>
            <output as="average">averageX</output>
            <output as="stddev">deviationX</output>
        </average>

        <average>
            <input clear="false">angvelY</input>
            <output as="average">averageY</output>
            <output as="stddev">deviationY</output>
        </average>

        <average>
            <input clear="false">angvelZ</input>
            <output as="average">averageZ</output>
            <output as="stddev">deviationZ</output>
        </average>
        

        <!-- counts the number of values in the raw data buffers -->
        <count>
            <input clear="false">angvel</input>
            <output>countAngVel</output>
        </count>

        <count>
            <input clear="false">angvelX</input>
            <output>countX</output>
        </count>

        <count>
            <input clear="false">angvelY</input>
            <output>countY</output>
        </count>

        <count>
            <input clear="false">angvelZ</input>
            <output>countZ</output>
        </count>
		

        <!-- calculates the minX for each component (including absolute) for the histogram -->
        <subrange>
            <input as="from" type="value">0</input>
            <input as="length" type="value">1</input>
            <input clear="false">binStartAngVel</input>
            <output>minXAngVel</output>
        </subrange>

        <subrange>
            <input as="from" type="value">0</input>
            <input as="length" type="value">1</input>
            <input clear="false">binStartX</input>
            <output>minXX</output>
        </subrange>

        <subrange>
            <input as="from" type="value">0</input>
            <input as="length" type="value">1</input>
            <input clear="false">binStartY</input>
            <output>minXY</output>
        </subrange>

        <subrange>
            <input as="from" type="value">0</input>
            <input as="length" type="value">1</input>
            <input clear="false">binStartZ</input>
            <output>minXZ</output>
        </subrange>


        <!-- appends all values to a single temporary output buffer used for calculations later on -->
        <append>
            <input clear="false">binStartAngVel</input>
            <output>temp1AngVel</output>
        </append>   

	<append>
            <input clear="false">binStartX</input>
            <output>temp1X</output>
        </append>

        <append>
            <input clear="false">binStartY</input>
            <output>temp1Y</output>
        </append>

        <append>
            <input clear="false">binStartZ</input>
            <output>temp1Z</output>
        </append>


        <!-- calculates the minX for each component (including absolute) for the histogram adding the binStart values and the binSize -->
        <add>
            <input>temp1AngVel</input>
            <input clear="false">binSize</input>
            <output>maxXAngVel</output>
        </add>  

	<add>
            <input>temp1X</input>
            <input clear="false">binSize</input>
            <output>maxXX</output>
        </add>

        <add>
            <input>temp1Y</input>
            <input clear="false">binSize</input>
            <output>maxXY</output>
        </add>

        <add>
            <input>temp1Z</input>
            <input clear="false">binSize</input>
            <output>maxXZ</output>
        </add>
        

        <!-- creates a linear range of values from the first X to the last X data point using as many values as the size of the output buffer (500 in this case) -->
        <ramp>
            <input as="start" clear="false">minXAngVel</input>
            <input as="stop" clear="false">maxXAngVel</input>
            <output>gaussianXAngVel</output>
        </ramp>

        <ramp>
            <input as="start" clear="false">minXX</input>
            <input as="stop" clear="false">maxXX</input>
            <output>gaussianXX</output>
        </ramp>

        <ramp>
            <input as="start" clear="false">minXY</input>
            <input as="stop" clear="false">maxXY</input>
            <output>gaussianXY</output>
        </ramp>

        <ramp>
            <input as="start" clear="false">minXZ</input>
            <input as="stop" clear="false">maxXZ</input>
            <output>gaussianXZ</output>
        </ramp>


        <!-- subtracts the average Y value from the Gaussian X value-->
        <subtract>
            <input clear="false">gaussianXAngVel</input>
            <input clear="false">averageAngVel</input>
            <output>temp1AngVel</output>
        </subtract>

        <subtract>
            <input clear="false">gaussianXX</input>
            <input clear="false">averageX</input>
            <output>temp1X</output>
        </subtract>

        <subtract>
            <input clear="false">gaussianXY</input>
            <input clear="false">averageY</input>
            <output>temp1Y</output>
        </subtract>

        <subtract>
            <input clear="false">gaussianXZ</input>
            <input clear="false">averageZ</input>
            <output>temp1Z</output>
        </subtract>


        <!-- squares the temporary buffers -->
        <multiply>
            <input clear="false">temp1AngVel</input>
            <input>temp1AngVel</input>
            <output>temp2AngVel</output>
        </multiply>

        <multiply>
            <input clear="false">temp1X</input>
            <input>temp1X</input>
            <output>temp2X</output>
        </multiply>

       <multiply>
            <input clear="false">temp1Y</input>
            <input>temp1Y</input>
            <output>temp2Y</output>
        </multiply>

        <multiply>
            <input clear="false">temp1Z</input>
            <input>temp1Z</input>
            <output>temp2Z</output>
        </multiply>
       

        <!-- scaling down -->
        <divide>
            <input>temp2AngVel</input>
            <input type="value">-2</input>
            <input clear="false">deviationAngVel</input>
            <input clear="false">deviationAngVel</input>
            <output>temp1AngVel</output>
        </divide>
        
        <divide>
            <input>temp2X</input>
            <input type="value">-2</input>
            <input clear="false">deviationX</input>
            <input clear="false">deviationX</input>
            <output>temp1X</output>
        </divide>
        
        <divide>
            <input>temp2Y</input>
            <input type="value">-2</input>
            <input clear="false">deviationY</input>
            <input clear="false">deviationY</input>
            <output>temp1Y</output>
        </divide>
        
        <divide>
            <input>temp2Z</input>
            <input type="value">-2</input>
            <input clear="false">deviationZ</input>
            <input clear="false">deviationZ</input>
            <output>temp1Z</output>
        </divide>


        <!-- scaling up (e^temp1...)-->
        <power>
            <input as="base" type="value">2.7182818284</input> <!-- e -->
            <input as="exponent">temp1AngVel</input>
            <output>temp2AngVel</output>
        </power>
        
        <power>
            <input as="base" type="value">2.7182818284</input> <!-- e -->
            <input as="exponent">temp1X</input>
            <output>temp2X</output>
        </power>
        
        <power>
            <input as="base" type="value">2.7182818284</input> <!-- e -->
            <input as="exponent">temp1Y</input>
            <output>temp2Y</output>
        </power>
        
        <power>
            <input as="base" type="value">2.7182818284</input> <!-- e -->
            <input as="exponent">temp1Z</input>
            <output>temp2Z</output>
        </power>
        

        <!-- scaling down -->
        <divide>
            <input>temp2AngVel</input>
            <input type="value">2.506628275</input> <!-- sqrt(2pi) -->
            <input clear="false">deviationAngVel</input>
            <output>temp1AngVel</output>
        </divide>
        
        <divide>
            <input>temp2X</input>
            <input type="value">2.506628275</input> <!-- sqrt(2pi) -->
            <input clear="false">deviationX</input>
            <output>temp1X</output>
        </divide>
        
        <divide>
            <input>temp2Y</input>
            <input type="value">2.506628275</input> <!-- sqrt(2pi) -->
            <input clear="false">deviationY</input>
            <output>temp1Y</output>
        </divide>
        
        <divide>
            <input>temp2Z</input>
            <input type="value">2.506628275</input> <!-- sqrt(2pi) -->
            <input clear="false">deviationZ</input>
            <output>temp1Z</output>
        </divide>
        

        <!-- calculates the Gaussian Y value for each component -->
        <multiply>
            <input>temp1AngVel</input>
            <input clear="false">binSize</input>
            <input clear="false">countAngVel</input>
            <output>gaussianAngVel</output>
        </multiply>
        
        <multiply>
            <input>temp1X</input>
            <input clear="false">binSize</input>
            <input clear="false">countX</input>
            <output>gaussianX</output>
        </multiply>
        
        <multiply>
            <input>temp1Y</input>
            <input clear="false">binSize</input>
            <input clear="false">countY</input>
            <output>gaussianY</output>
        </multiply>
        
        <multiply>
            <input>temp1Z</input>
            <input clear="false">binSize</input>
            <input clear="false">countZ</input>
            <output>gaussianZ</output>
        </multiply>
    </analysis>


    <!-- for exporting to Excel -->
    <export>
        <set name="Data">
            <data name="t (s)">t</data>
            <data name="X Component Acceleration (deg/s)">angvelX</data>
            <data name="Y Component Acceleration (deg/s)">angvelY</data>
            <data name="Z Component Acceleration (deg/s)">angvelZ</data>
            <data name="Magnitude of Acceleration (deg/s)">angvel</data>
        </set>

        <set name="Histogram Magnitude">
            <data name="Bin start (deg/s)">binStartAngVel</data>
            <data name="Bin count">binCountAngVel</data>
        </set>

        <set name="Histogram X">
            <data name="X Bin start (deg/s)">binStartX</data>
            <data name="X Bin count">binCountX</data>
        </set>        
		
        <set name="Histogram Y">
            <data name="Y Bin start (deg/s)">binStartY</data>
            <data name="Y Bin count">binCountY</data>
        </set>        
		
        <set name="Histogram Z">
            <data name="Z Bin start (deg/s)">binStartZ</data>
            <data name="Z Bin count">binCountZ</data>
        </set>
    </export>
</phyphox>
